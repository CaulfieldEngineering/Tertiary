# windows_pkg.yml
name: Package Windows

inputs:
  version:
    required: true
    type: string

runs:
  using: composite
  steps:

    # Install Inno Setup (Windows Only)
    # ==========================================================================================
    - name: Install Inno Setup (Windows Only)
      if: matrix.os == 'windows-latest'
      run: choco install innosetup --yes

    # Compile Inno Setup script (Windows Only)
    # ==========================================================================================
    - name: Compile Inno Setup script (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' "${{github.workspace}}\build\installer_win.iss"
      shell: pwsh

    # Check for required signing secrets
    # ==========================================================================================
    - name: Check Required Secrets
      id: check_secrets
      shell: bash
      run: |
        if [ -z "${{ secrets.AZURE_TENANT_ID }}" ] || [ -z "${{ secrets.AZURE_CLIENT_ID }}" ] || [ -z "${{ secrets.AZURE_CLIENT_SECRET }}" ] || [ -z "${{ secrets.AZURE_ENDPOINT }}" ] || [ -z "${{ secrets.AZURE_CODE_SIGNING_NAME }}" ] || [ -z "${{ secrets.AZURE_CERT_PROFILE_NAME }}" ]; then
          echo "Required secrets for Azure signing are not set. Skipping signing step."
          echo "proceed=false" >> $GITHUB_OUTPUT
        else
          echo "proceed=true" >> $GITHUB_OUTPUT
        fi

    # Sign the Windows Installer Executable using Azure Trusted Signing
    # ==========================================================================================
    - name: Sign Windows Installer (Azure)
      if: ${{ matrix.os == 'windows-latest' && steps.check_secrets.outputs.proceed == 'true' }}
      uses: azure/trusted-signing-action@v0.5.0
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: ${{ secrets.AZURE_ENDPOINT }}
        trusted-signing-account-name: ${{ secrets.AZURE_CODE_SIGNING_NAME }}
        certificate-profile-name: ${{ secrets.AZURE_CERT_PROFILE_NAME }}
        files-folder: ${{ github.workspace }}/build
        files-folder-filter: exe
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256